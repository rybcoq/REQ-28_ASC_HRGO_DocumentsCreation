<Activity mc:Ignorable="sap sap2010" x:Class="SU_CatchBusinessRuleException" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FlagSendMail" Type="InArgument(x:Boolean)" />
    <x:Property Name="FlagTakeScreenshot" Type="InArgument(x:Boolean)" />
    <x:Property Name="PathTemp" Type="InArgument(x:String)" />
    <x:Property Name="ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="MailAddress" Type="InArgument(x:String)" />
    <x:Property Name="RetryNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="RetryNotificationThreshold" Type="InArgument(x:Int32)" />
    <x:Property Name="MailAddressCc" Type="InArgument(x:String)" />
    <x:Property Name="ExceptionArgument" Type="InArgument(s:Exception)" />
    <x:Property Name="ItemId" Type="InArgument(x:String)" />
    <x:Property Name="DictConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>989,1412</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SU_CatchBusinessRuleException_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SU_CatchProcessingError" sap:VirtualizedContainerService.HintSize="526,1347" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="errorDescription" />
      <Variable x:TypeArguments="x:String" Name="pathScreenshot" />
      <Variable x:TypeArguments="x:String" Name="errorType" />
      <Variable x:TypeArguments="x:String" Default="S0010" Name="errorCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="484,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Take screenshot and send email notification with error description." />
    <If Condition="[FlagTakeScreenshot]" DisplayName="If take screenshot" sap:VirtualizedContainerService.HintSize="484,264" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_TakeSaveScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_TakeSaveScreenshot.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="PathDirectory">[PathTemp]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="ErrorDescription" />
            <InArgument x:TypeArguments="x:String" x:Key="ErrorType" />
            <OutArgument x:TypeArguments="x:String" x:Key="PathScreenShot">[pathScreenshot]</OutArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="FlagErrorLog" />
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[FlagSendMail]" DisplayName="If send mail" sap:VirtualizedContainerService.HintSize="484,837" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence DisplayName="Send mail" sap:VirtualizedContainerService.HintSize="420,660" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="subject" />
            <Variable x:TypeArguments="x:String" Name="body" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="ARF build mail - Comment Out" sap:VirtualizedContainerService.HintSize="378,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="725,499" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[ExceptionArgument.GetType = GetType(UiPath.Core.BusinessRuleException)]" DisplayName="build mail" sap:VirtualizedContainerService.HintSize="683,407" sap2010:WorkflowViewState.IdRef="If_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_PrepareCustomErrorMail workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_PrepareCustomErrorMail.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[ExceptionArgument]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="Subject">[subject]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="Body">[body]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign subject" sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[subject]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[string.Format("{0} ERROR: {1}. Code: {2}", errorType, ProcessName, errorCode)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign body" sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[body]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[string.Format("Source: {1}{0}{0}Type: {2}{0}{0}Message: {3}{0}{0}InnerException: {4}",vbNewLine,ExceptionArgument.Source,ExceptionArgument.GetType.ToString,ExceptionArgument.Message,ExceptionArgument.InnerException)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <Sequence DisplayName="Build mail" sap:VirtualizedContainerService.HintSize="378,350" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile Content="[body]" DisplayName="Read mail body notification" FileName="[DictConfig(&quot;PathMailNotificationMailBodyFail&quot;)]" sap:VirtualizedContainerService.HintSize="336,59" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <Assign DisplayName="Assign mailbody" sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[body]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[body.Replace(DictConfig("EmailPlaceholder"), ExceptionArgument.Message)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadTextFile Content="[subject]" DisplayName="Read mail subject notification" FileName="[DictConfig(&quot;PathMailNotificationMailSubjectFail&quot;)]" sap:VirtualizedContainerService.HintSize="336,59" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
          </Sequence>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_SendEmail workflow" sap:VirtualizedContainerService.HintSize="378,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="SUPPORT\SU_SendEmail.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="s:String[]" x:Key="ArrPathAttachment">
                <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{pathScreenshot}" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Subject">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subject" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Body">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="body" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Recipient">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MailAddress" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Cc">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MailAddressCc" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Bcc" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>