<Activity mc:Ignorable="sap sap2010 sads" x:Class="SU_GeneralCatch"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FlagTakeScreenshot" Type="InArgument(x:Boolean)" />
    <x:Property Name="PathScreenhotDirectory" Type="InArgument(x:String)" />
    <x:Property Name="ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="MailAddress" Type="InArgument(x:String)" />
    <x:Property Name="ExceptionArgument" Type="InArgument(s:Exception)" />
    <x:Property Name="ErrorCode" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SU_GeneralCatch_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SU_GeneralCatch" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pathScreenshot" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_Logging workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ItemId" />
        <InArgument x:TypeArguments="x:String" x:Key="ItemTrace" />
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode">[ErrorCode]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
        <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
        <InArgument x:TypeArguments="s:Exception" x:Key="Exception">[ExceptionArgument]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[FlagTakeScreenshot]" DisplayName="If take screenshot" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_TakeSaveScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_TakeSaveScreenshot.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="PathDirectory">[PathScreenhotDirectory]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="PathScreenShot">[pathScreenshot]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <Sequence DisplayName="Send email" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="subject" />
        <Variable x:TypeArguments="x:String" Name="body" />
      </Sequence.Variables>
      <If Condition="[ExceptionArgument.GetType.ToString = &quot;UiPath.Core.BusinessRuleException&quot;]" DisplayName="If custom error" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="errorType" />
              <Variable x:TypeArguments="x:String" Name="errorDescription" />
            </Sequence.Variables>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_SplitBusinessRuleException workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_SplitBusinessRuleException.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <OutArgument x:TypeArguments="x:String" x:Key="ErrorType">[errorType]</OutArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="Exception">[ExceptionArgument]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="ErrorCode">[errorCode]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="ErrorDescription">[errorDescription]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_PrepareCustomErrorMail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_PrepareCustomErrorMail.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[ExceptionArgument]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="Subject">[subject]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="Body">[body]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Assign DisplayName="Assign subject" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[subject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.Format("{0} ERROR: {1}. Code: {2}", "GENERAL", ProcessName, errorCode)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign body" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[body]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.Format("Source: {1}{0}{0}Type: {2}{0}{0}Message: {3}{0}{0}InnerException: {4}",vbNewLine,ExceptionArgument.Source,ExceptionArgument.GetType.ToString,ExceptionArgument.Message,ExceptionArgument.InnerException)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SU_SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SUPPORT\SU_SendEmail.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="s:String[]" x:Key="ArrPathAttachment">[{pathScreenshot}]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Subject">[subject]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Body">[body]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Recipient">[MailAddress]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Cc" />
          <InArgument x:TypeArguments="x:String" x:Key="Bcc" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <sads:DebugSymbol.Symbol>d0xDOlxVc2Vyc1xBMDc2NTI4N1xEb3dubG9hZHNcQVJGXzIwMTguNC4xXEZSQU1FV09SS1xTVV9DYXRjaEdlbmVyYWxFcnJvci54YW1sKUsDowEOAgEBTwVYHQIBO1kFYwoCATBkBaEBEAIBAlNGU1ECAT9WRVZYAgE9T7cBT9IBAgE8WRNZKQIBMVsJYSECATNpB5YBDAIBDZcBB6ABHwIBA19MX1wCATldSF1VAgE3W8YBW+wBAgE2XkpeYgIBNGkVaWsCAQ5rC4ABFgIBG4MBC5QBFgIBEJkBTpkBYAIBC5sBP5sBRQIBCZoBQpoBSwIBB5wBRJwBUQIBBZcBuwGXAdYBAgEEcA13JQIBJngNfyUCARyEAQ2LARYCARWMAQ2TARYCARF1UnVkAgEuc01zYAIBLHRLdFYCASpw0gFwgAICASlyS3JWAgEnfEZ8TAIBJHtJe1ICASJ6VXpoAgEgfUx9WQIBHnjOAXj4AQIBHYkBOIkBhwECARiGATmGAUICARaRATiRAZECAgEUjgE5jgE/AgES</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="649.6,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="649.6,237.6" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336.8,340.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="265.6,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="627.2,490.4" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="627.2,88" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="649.6,743.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="672,1273.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SU_GeneralCatch_1" sap:VirtualizedContainerService.HintSize="712,1353.6" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>