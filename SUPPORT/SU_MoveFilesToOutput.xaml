<Activity mc:Ignorable="sap sap2010" x:Class="SU_MoveFilesToOutput" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ItemID" Type="InArgument(x:String)" />
    <x:Property Name="PathInProgress" Type="InArgument(x:String)" />
    <x:Property Name="DictConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="DictOthers" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="PathDocumentsForUploadFolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>609,1023</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SU_MoveFilesToOutput" sap:VirtualizedContainerService.HintSize="589,963" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="flagPathExist" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log Start" sap:VirtualizedContainerService.HintSize="547,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ItemId">[ItemID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">Moving files to output folder</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
        <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
        <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:PathExists DisplayName="Path Exists" Exists="[flagPathExist]" sap:VirtualizedContainerService.HintSize="547,88" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Path.Combine(PathDocumentsForUploadFolder,ItemID)]" PathType="Folder" />
    <If Condition="[not flagPathExist]" DisplayName="Create directory if it does not exist" sap:VirtualizedContainerService.HintSize="547,334" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Path.Combine(PathDocumentsForUploadFolder,ItemID)]" />
      </If.Then>
      <If.Else>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Delete all existing files" sap:VirtualizedContainerService.HintSize="302,191" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(Path.Combine(PathDocumentsForUploadFolder,ItemID))]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="file" />
              </ActivityAction.Argument>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file]" />
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Move all files from incoming folder" sap:VirtualizedContainerService.HintSize="547,191" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(Path.Combine(PathInProgress, ItemID))]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <ui:MoveFile ContinueOnError="{x:Null}" Destination="[Path.Combine(PathDocumentsForUploadFolder, ItemID, Path.GetFileName(file))]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="False" Path="[file]" />
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log End" sap:VirtualizedContainerService.HintSize="547,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ItemId">[ItemID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">All files moved to output folder</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
        <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
        <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>