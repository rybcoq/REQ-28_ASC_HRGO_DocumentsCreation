<Activity mc:Ignorable="sap sap2010" x:Class="SU_RenameTemplateToProper" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="DictConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="ItemID" Type="InArgument(x:String)" />
    <x:Property Name="DictFiles" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="DictNewFiles" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="DictTags" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="PathInProgress" Type="InArgument(x:String)" />
    <x:Property Name="MarkerFiles" Type="InArgument(s:String[])" />
  </x:Members>
  <this:SU_RenameTemplateToProper.MarkerFiles>
    <InArgument x:TypeArguments="s:String[]" />
  </this:SU_RenameTemplateToProper.MarkerFiles>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>969,1169</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SU_RenameTemplateToProper" sap:VirtualizedContainerService.HintSize="949,1069" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="[DictTags(DictConfig(&quot;FirstNameTag&quot;))]" Name="firstNameTag" />
      <Variable x:TypeArguments="x:String" Default="[DictTags(DictConfig(&quot;SurnameTag&quot;))]" Name="surnameTag" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log Start" sap:VirtualizedContainerService.HintSize="907,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ItemId">[ItemID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">Renaming files inside temporary folder</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
        <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
        <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Build dictionary with new files list" sap:VirtualizedContainerService.HintSize="907,59" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[DictNewFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new dictionary(of string, string)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="Loop over all files" sap:VirtualizedContainerService.HintSize="907,662" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[DictFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="item" />
          </ActivityAction.Argument>
          <If Condition="[MarkerFiles.Contains(item.value)]" DisplayName="If file marked for rename then add to dict and skip" sap:VirtualizedContainerService.HintSize="871,531" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[DictNewFiles]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="392,135" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="[item.Key]" Value="[item.Value]" />
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Rename file" sap:VirtualizedContainerService.HintSize="434,388" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="fileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Build file name" sap:VirtualizedContainerService.HintSize="392,59" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.Key.Replace(DictConfig("FileNamePlaceholder"),firstNameTag &amp; " " &amp; surnameTag)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[Path.Combine(PathInProgress, ItemID, fileName)]" DisplayName="Rename file" sap:VirtualizedContainerService.HintSize="392,22" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="False" Path="[Path.Combine(PathInProgress, ItemID, item.Value)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MoveFile>
                <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[DictNewFiles]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="392,135" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5" Key="[item.Key]" Value="[fileName]" />
              </Sequence>
            </If.Else>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log end" sap:VirtualizedContainerService.HintSize="907,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ItemId">[ItemID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">All files renamed</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
        <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
        <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
        <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>