<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="989,851" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID1}" DisplayName="State machine" sap:VirtualizedContainerService.HintSize="642,786" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">260,2.5</av:Point>
        <x:Double x:Key="StateContainerWidth">608</x:Double>
        <x:Double x:Key="StateContainerHeight">750.4</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">289,77.5 289,107.5 290.25,107.5 290.25,120.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID2" DisplayName="End state" sap:VirtualizedContainerService.HintSize="134,61" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
      <State.Entry>
        <Sequence DisplayName="end state sequence" sap:VirtualizedContainerService.HintSize="568,1028" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log end state" sap:VirtualizedContainerService.HintSize="526,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="ItemId" />
              <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">Finnishing execution</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
              <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
              <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
              <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="Send summary report" sap:VirtualizedContainerService.HintSize="526,322" sap2010:WorkflowViewState.IdRef="Sequence_33">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[dtSummary.Rows.Count &gt; 0]" DisplayName="If more than 1 summary row" sap:VirtualizedContainerService.HintSize="484,230" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Save and send execution summary" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_SaveAndSendSummary.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="DtSummary">[dtSummary]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PathReportFolder">[dictConfig("PathTemp")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="MailAddress">[dictConfig("BusinessMail")]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
          </Sequence>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Clear processing env end state" sap:VirtualizedContainerService.HintSize="524.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="PROCESS\PR_ClearProcessEnvironment.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <TryCatch DisplayName="TC - clear temp" sap:VirtualizedContainerService.HintSize="524.8,319.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Delete temp end state" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_DeleteTemp.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="PathToTemp">[dictConfig("PathTemp")]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:NullReferenceException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,113.6" sap2010:WorkflowViewState.IdRef="Comment_5" Text="This error is generated when config file was nto read properly. No action needs to be taken, because executiond id nto generate any temp files anyway" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">474,348.5</av:Point>
          <av:Size x:Key="ShapeSize">134,61</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">100</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </State>
    <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Initialize processing: get settings, launch all applications" DisplayName="Initialize state" sap:VirtualizedContainerService.HintSize="195,118" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="Catch init exc" sap:VirtualizedContainerService.HintSize="703,1797" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="665,1579" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log init begin" sap:VirtualizedContainerService.HintSize="623,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="ItemId" />
                  <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">Initializing environement...</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
                  <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
                  <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
                  <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[dictConfig is Nothing]" DisplayName="If first run" sap:VirtualizedContainerService.HintSize="623,827" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="376,684" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="pathConfig" />
                      <Variable x:TypeArguments="x:String" Name="pathClearEnvProcessList" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="0_PathClearEnvironmentProcessList" DisplayName="Get path process list clear env" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                      <ui:GetRobotAsset.Value>
                        <OutArgument x:TypeArguments="x:String">[pathClearEnvProcessList]</OutArgument>
                      </ui:GetRobotAsset.Value>
                    </ui:GetRobotAsset>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Clear environment init" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_ClearEnvironment.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="PathProcesses">[pathClearEnvProcessList]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="REQ-28b_PathConfig" DisplayName="Get cfg path" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                      <ui:GetRobotAsset.Value>
                        <OutArgument x:TypeArguments="x:String">[pathConfig]</OutArgument>
                      </ui:GetRobotAsset.Value>
                    </ui:GetRobotAsset>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get configuration settings" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_GetConfig.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="PathConfig">[pathConfig]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</OutArgument>
                        <InOutArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InOutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="MailRobotOperator">[operatorMail]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Delete temp init" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_DeleteTemp.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="PathToTemp">[dictConfig("PathTemp")]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Initialize summary dt" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_InitSummaryDt.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="s:String[]" x:Key="ArrColumnNames">[{"ItemId", "SourceInputExcel", "HRGOAgent", "Country", "Team", "Status", "Comment"}]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="DtOut">[dtSummary]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
              </If>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Clear processing env init" sap:VirtualizedContainerService.HintSize="623,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="PROCESS\PR_ClearProcessEnvironment.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:Comment sap:VirtualizedContainerService.HintSize="623,112" sap2010:WorkflowViewState.IdRef="Comment_2" Text="If certain applications require a lot of time to start (launching, logging on) it is suggested to check if there is data to be processed and quit execution before launching application." />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Launch process environment" sap:VirtualizedContainerService.HintSize="623,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="PROCESS\PR_LaunchProcessEnvironment.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log init finished" sap:VirtualizedContainerService.HintSize="623,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="ItemId" />
                  <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">Environment initialized</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
                  <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
                  <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
                  <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="669,20" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Initialize GE" sap:VirtualizedContainerService.HintSize="598,373" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="pathTemp" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign error flag" sap:VirtualizedContainerService.HintSize="556,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[flagInitError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="set temp diretory path" sap:VirtualizedContainerService.HintSize="556,52.8" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[dictConfig is Nothing]" DisplayName="if temp does not exists" sap:VirtualizedContainerService.HintSize="533.6,496.8" sap2010:WorkflowViewState.IdRef="If_14">
                      <If.Then>
                        <Sequence DisplayName="Add temp" sap:VirtualizedContainerService.HintSize="265.6,347.2" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="pathSystemTemp" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign path system temp" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[pathSystemTemp]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Environment.GetEnvironmentVariable("TEMP")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign path rpa temp" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[pathTemp]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[string.Format("{0}\RPA_TEMP\{1}", pathSystemTemp, ProcessName)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create temp directory" sap:VirtualizedContainerService.HintSize="243.2,22.4" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[pathTemp]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign path rpa temp from config" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[pathTemp]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dictConfig("PathTemp")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Catch error init" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_CatchGeneralError.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="FlagTakeScreenshot">True</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="PathScreenhotDirectory">[pathTemp]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="MailAddress">[operatorMail]</InArgument>
                      <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exception]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ErrorCode">G0001</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">202.5,120.5</av:Point>
          <av:Size x:Key="ShapeSize">195,118</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">160.60000000000002</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Start processing" sap:VirtualizedContainerService.HintSize="430.4,515.2" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">300,238.5 300,268.5 298.6,268.5 298.6,330.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[not(flagInitError)]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get data for further processing.  Quit if there is no data to be processed." DisplayName="Get data state" sap:VirtualizedContainerService.HintSize="228,118" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <Sequence DisplayName="Get transaction data" sap:VirtualizedContainerService.HintSize="703,1367" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ShouldStop sap:VirtualizedContainerService.HintSize="661,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[flagStop]" />
                  <If Condition="[flagStop]" DisplayName="If should stop" sap:VirtualizedContainerService.HintSize="661,970" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Else>
                      <TryCatch DisplayName="TC get data" sap:VirtualizedContainerService.HintSize="516,827" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <TryCatch.Try>
                          <Sequence DisplayName="Get transaction data" sap:VirtualizedContainerService.HintSize="478,609" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Comment sap:VirtualizedContainerService.HintSize="436,93" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Pick workflow based on type of input you are working with (Orchestrator queue vs no queue)" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="[Q] Get transaction data" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="PROCESS\PR_GetTransactionData.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionItem">[transactionItem]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="QueueName">[dictConfig("QueueName")]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:CommentOut DisplayName="Comment out" sap:VirtualizedContainerService.HintSize="436,257" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="[No Q] Get transaction data no queue" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="PROCESS\PR_GetTransactionDataNoQueue.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <OutArgument x:TypeArguments="sd:DataRow" x:Key="TransactionItem">[transactionItem]</OutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="TransactionIdx">[transactionIdx]</InOutArgument>
                                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="DtProcessData">[dtProcessData]</InOutArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="FlagStop">[flagStop]</OutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="RetryNumber">[retryNumber]</InOutArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="FlagRetry">[flagRetry]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </ui:CommentOut.Body>
                            </ui:CommentOut>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="482,20" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Catch general error" sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Catch error get data" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_CatchGeneralError.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="FlagTakeScreenshot">True</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="PathScreenhotDirectory">[dictConfig("PathTemp")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="MailAddress">[operatorMail]</InArgument>
                                    <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exception]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ErrorCode">G0002</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Assign flag stop true" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[flagStop]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Else>
                  </If>
                  <If Condition="[transactionItem is nothing]" DisplayName="If transaction empty" sap:VirtualizedContainerService.HintSize="661,203" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Assign DisplayName="Assign flag stop" sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[flagStop]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">196,330.5</av:Point>
                  <av:Size x:Key="ShapeSize">228,118</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">194.20000000000005</x:Double>
                  <x:Double x:Key="StateContainerHeight">25</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="New item" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">310,448.5 310,514</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[flagStop=false]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Process transaction data. Set success or error status. Log execution message." DisplayName="Process transaction state" sap:VirtualizedContainerService.HintSize="769,3335" sap2010:WorkflowViewState.IdRef="State_4">
                      <State.Entry>
                        <TryCatch DisplayName="TC process transaction" sap:VirtualizedContainerService.HintSize="723,2917" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <TryCatch.Variables>
                            <Variable x:TypeArguments="x:String" Name="teamName" />
                            <Variable x:TypeArguments="x:String" Name="countryName" />
                            <Variable x:TypeArguments="x:String" Name="agentHRGO" />
                            <Variable x:TypeArguments="x:String" Name="pathSourceInputExcel" />
                          </TryCatch.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Try process transaction" sap:VirtualizedContainerService.HintSize="418,1492" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Init variables" sap:VirtualizedContainerService.HintSize="376,1241" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign item id" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[itemId]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionItem.Reference]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign country" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[countryName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionItem.SpecificContent("Country").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign team name" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[teamName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionItem.SpecificContent("TeamName").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign HRGO agent" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[agentHRGO]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionItem.SpecificContent("HRGOAgent").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AddLogFields DisplayName="Add log fields (country, team,agent)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                                  <ui:AddLogFields.Fields>
                                    <InArgument x:TypeArguments="x:String" x:Key="HRGOTeamName">[teamName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="HRGOCountryName">[countryName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="HRGOAgent">[agentHRGO]</InArgument>
                                  </ui:AddLogFields.Fields>
                                </ui:AddLogFields>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log processing started" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_Logging.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="ItemId">[itemId]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ItemTrace">["Starting processing: " + itemId]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ExceptionCode" />
                                    <InArgument x:TypeArguments="x:String" x:Key="ExceptionDescription" />
                                    <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime" />
                                    <InArgument x:TypeArguments="s:Exception" x:Key="Exception" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Assign path to source Excel input" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[pathSourceInputExcel]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionItem.SpecificContent("ProcessedExcelPath").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign processing exception nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[exceptionProcessing]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign start time" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[startTime]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[DateTime.UtcNow]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Reset flag reset" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[flagReset]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Reset flag processing error" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[flagProcessingErrorEncountered]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign flag reset true" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[flagRetry]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="PROCESS\PR_ProcessTransaction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionItem">[transactionItem]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ItemId">[itemId]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="689,2755" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Catch processing error" sap:VirtualizedContainerService.HintSize="683,2686" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="errorCode" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="[Q] Get retry number" sap:VirtualizedContainerService.HintSize="641,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[retryNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[transactionItem.RetryNo]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign processing exception" sap:VirtualizedContainerService.HintSize="641,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[exceptionProcessing]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Handle processing error" sap:VirtualizedContainerService.HintSize="641,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_CatchProcessingError.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="FlagSendMail">
                                        <Literal x:TypeArguments="x:Boolean" Value="True" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="FlagTakeScreenshot">
                                        <Literal x:TypeArguments="x:Boolean" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="PathTemp">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dictConfig(&quot;PathTemp&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProcessName">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="processName" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="MailAddress">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="transactionItem.SpecificContent(&quot;HRGOAgent&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="RetryNumber">
                                        <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="retryNumber" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="RetryNotificationThreshold">
                                        <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="int32.Parse(dictConfig(&quot;RetryLimitMailBusiness&quot;))" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="MailAddressCc" />
                                      <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">
                                        <mva:VisualBasicValue x:TypeArguments="s:Exception" ExpressionText="exception" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ItemId">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="itemId" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">
                                        <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dictConfig" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <If Condition="[exception.GetType = GetType(UiPath.Core.BusinessRuleException)]" DisplayName="get error code" sap:VirtualizedContainerService.HintSize="641,245" sap2010:WorkflowViewState.IdRef="If_10">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get error code" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_SplitBusinessRuleException.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <OutArgument x:TypeArguments="x:String" x:Key="ErrorType" />
                                          <InArgument x:TypeArguments="s:Exception" x:Key="Exception">[exception]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="ErrorCode">[errorCode]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="ErrorDescription" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                    <If.Else>
                                      <Assign DisplayName="Assign default error code" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[errorCode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">S0010</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                  <Sequence DisplayName="If reset environment" sap:VirtualizedContainerService.HintSize="641,1305" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="sd:DataTable" Name="dtCodesReset" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="For specific codes" sap:VirtualizedContainerService.HintSize="576,730" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:BuildDataTable sap2010:Annotation.AnnotationText="put here error codes after which you want to reset environment" DataTable="[dtCodesReset]" DisplayName="Build reset data table" sap:VirtualizedContainerService.HintSize="534,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Code&gt;S0010&lt;/Code&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Code&gt;S0008&lt;/Code&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:BuildDataTable>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCodesReset]" DisplayName="For each reset code" sap:VirtualizedContainerService.HintSize="534,539" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <If Condition="[row(&quot;Code&quot;).ToString = errorCode]" DisplayName="If code matches" sap:VirtualizedContainerService.HintSize="484,391" sap2010:WorkflowViewState.IdRef="If_7">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign DisplayName="Assign reset true" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[flagReset]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                    </Sequence>
                                    <Sequence DisplayName="For every system error" sap:VirtualizedContainerService.HintSize="576,443" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:Comment sap:VirtualizedContainerService.HintSize="484,74" sap2010:WorkflowViewState.IdRef="Comment_6" Text="Use this sequence if you want to reset environment for every system error" />
                                      <If Condition="[Left(errorCode, 1) = &quot;S&quot;]" DisplayName="If system error" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_13">
                                        <If.Then>
                                          <Assign DisplayName="Assign reset true" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[flagReset]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                  <ui:CommentOut DisplayName="Comment out" sap:VirtualizedContainerService.HintSize="641,537" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="418,459" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="If retry" sap:VirtualizedContainerService.HintSize="376,367" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Comment sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="Comment_3" Text="This section should be used only when working without Orchestrator queues (items processed are not queue items)" />
                                          <If sap2010:Annotation.AnnotationText="Very generic approach, adjust further if needed" Condition="[Left(errorCode, 1) = &quot;B&quot;]" DisplayName="If business exception" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_11">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Assign DisplayName="Assign retry flag false" sap:VirtualizedContainerService.HintSize="243.2,60.8" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[flagRetry]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign DisplayName="Assign retry flag false" sap:VirtualizedContainerService.HintSize="243.2,60.8" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[flagRetry]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                          <ui:CommentOut DisplayName="Comment out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                            <ui:CommentOut.Body>
                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="418,459" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence DisplayName="Retry particular error codes" sap:VirtualizedContainerService.HintSize="556,337" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="sd:DataTable" Name="dtCodesReset" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="dtCodesRetry" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_4" Text="Use when needed" />
                                                  <ui:BuildDataTable sap2010:Annotation.AnnotationText="put here error codes after which you want to reset environment" DataTable="[dtCodesRetry]" DisplayName="Build reset data table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:BuildDataTable>
                                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCodesRetry]" DisplayName="For each retry code" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                        </ActivityAction.Argument>
                                                        <If Condition="[row(&quot;Code&quot;).ToString = errorCode]" DisplayName="If code matches" sap:VirtualizedContainerService.HintSize="464,398.4" sap2010:WorkflowViewState.IdRef="If_12">
                                                          <If.Then>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="265.6,248" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Assign reset true" sap:VirtualizedContainerService.HintSize="243.2,60.8" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Boolean">[flagRetry]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:Break sap:VirtualizedContainerService.HintSize="243.2,22.4" sap2010:WorkflowViewState.IdRef="Break_2" />
                                                            </Sequence>
                                                          </If.Then>
                                                        </If>
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ForEachRow>
                                                </Sequence>
                                              </Sequence>
                                            </ui:CommentOut.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:CommentOut>
                                        </Sequence>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                  </ui:CommentOut>
                                  <Assign DisplayName="Assign flag processing error" sap:VirtualizedContainerService.HintSize="641,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[flagProcessingErrorEncountered]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <Sequence DisplayName="Finally Processing state" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log transaction status" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_LogTransaction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="s:DateTime" x:Key="StartTime">[startTime]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ItemId">[itemId]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exceptionProcessing]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Only for Orchestrator queues. Comment out if not using Orchestrator queues" DisplayName="[Q] Set transation item status" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_SetTransactionStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exceptionProcessing]</InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionItem">[transactionItem]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Add summary dt row" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="FRAMEWORK\SU_UpdateSummaryDt.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exceptionProcessing]</InArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="DtSummary">[dtSummary]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ItemId">[itemId]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TeamName">[teamName]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="CountryName">[countryName]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="AgentHRGO">[agentHRGO]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="PathSourceInputExcel">[pathSourceInputExcel]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Finally>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">193,514</av:Point>
                          <av:Size x:Key="ShapeSize">234,118</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">199.80000000000007</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Next item" sap:VirtualizedContainerService.HintSize="430.4,515.2" sap2010:WorkflowViewState.IdRef="Transition_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">193,596.6 163,596.6 163,395.4 196,395.4</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">53</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[flagReset=false]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Reset env" sap:VirtualizedContainerService.HintSize="430.4,723.2" sap2010:WorkflowViewState.IdRef="Transition_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">286.6,632 286.6,647.2 172.5,647.2 172.5,197.2 202.5,197.2</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">49</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence sap:VirtualizedContainerService.HintSize="336,318.4" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage sap:VirtualizedContainerService.HintSize="313.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Restarting environment&quot;]" />
                              <Assign DisplayName="reset flagReset" sap:VirtualizedContainerService.HintSize="313.6,60.8" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[flagReset]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>[flagReset]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                      <State.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="flagReset" />
                        <Variable x:TypeArguments="s:Exception" Name="exceptionProcessing" />
                        <Variable x:TypeArguments="s:DateTime" Name="startTime" />
                        <Variable x:TypeArguments="x:String" Name="itemId" />
                      </State.Variables>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Stop" sap:VirtualizedContainerService.HintSize="430.4,515.2" sap2010:WorkflowViewState.IdRef="Transition_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">424,389.5 454,389.5 454,379 474,379</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID2</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[flagStop]</Transition.Condition>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="flagStop" />
              </State.Variables>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="General error" sap:VirtualizedContainerService.HintSize="430.4,515.2" sap2010:WorkflowViewState.IdRef="Transition_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">397.5,185.4 541,185.4 541,348.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID2</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage sap:VirtualizedContainerService.HintSize="313.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;General error&quot;]" />
          </Transition.Action>
          <Transition.Condition>[flagInitError]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="flagInitError" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" Default="tomasz.rybka@aon.com" Name="operatorMail" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictConfig" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSummary" />
      <Variable x:TypeArguments="x:String" Default="Documents Creation" Name="processName" />
      <Variable x:TypeArguments="ui:QueueItem" Name="transactionItem" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="transactionIdx" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtProcessData" />
      <Variable x:TypeArguments="x:Boolean" Name="flagProcessingErrorEncountered" />
      <Variable x:TypeArguments="x:Int32" Name="retryNumber" />
      <Variable x:TypeArguments="x:Boolean" Name="flagRetry" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>